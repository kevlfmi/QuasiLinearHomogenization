function out = micro_CA(path,param_list,ReL,epsilon,iter)
% solves the microscopic problem with the constant advection (CA) approach
% param_list has 6 rows, sigma nn tn U, then D then u,v, and N columns, format double;

for i=1:length(param_list(1,:))
    
disp(['solving micro CA... cell=',num2str(i),' iter=',num2str(iter)])
import com.comsol.model.*
import com.comsol.model.util.*

model = ModelUtil.create('Model');

model.modelPath(path);
ModelUtil.showProgress(true); %to show progress
model.label(['micro_CA-',num2str(iter),'.mph']);

model.param.set('por', '0.7');
model.param.set('delta', '0.01');
model.param.set('K', '8');
model.param.set('ReL', num2str(ReL));
model.param.set('U', num2str(-param_list(5,i)));
model.param.set('V', num2str(-param_list(6,i)));
model.param.set('epsilon', num2str(epsilon));
model.param.set('Uratio', '1');
model.param.set('x_dir', '0');

model.component.create('comp1', true);

model.component('comp1').geom.create('geom1', 2);

model.component('comp1').baseSystem('none');

model.result.table.create('tbl1', 'Table');
model.result.table.create('tbl2', 'Table');

model.component('comp1').mesh.create('mesh1');

model.component('comp1').geom('geom1').create('r1', 'Rectangle');
model.component('comp1').geom('geom1').feature('r1').set('base', 'center');
model.component('comp1').geom('geom1').feature('r1').set('size', {'2*K' '1'});
model.component('comp1').geom('geom1').create('c1', 'Circle');
model.component('comp1').geom('geom1').feature('c1').set('r', '(1-por)/2');
model.component('comp1').geom('geom1').create('ls1', 'LineSegment');
model.component('comp1').geom('geom1').feature('ls1').set('specify1', 'coord');
model.component('comp1').geom('geom1').feature('ls1').set('coord1', [0 -0.5]);
model.component('comp1').geom('geom1').feature('ls1').set('specify2', 'coord');
model.component('comp1').geom('geom1').feature('ls1').set('coord2', [0 0.5]);
model.component('comp1').geom('geom1').create('r2', 'Rectangle');
model.component('comp1').geom('geom1').feature('r2').set('base', 'center');
model.component('comp1').geom('geom1').feature('r2').set('size', {'delta' '1'});
model.component('comp1').geom('geom1').create('dif1', 'Difference');
model.component('comp1').geom('geom1').feature('dif1').selection('input').set({'ls1' 'r1' 'r2'});
model.component('comp1').geom('geom1').feature('dif1').selection('input2').set({'c1'});
model.component('comp1').geom('geom1').run;
model.component('comp1').geom('geom1').run('fin');

model.component('comp1').physics.create('spf', 'CreepingFlow', 'geom1');
model.component('comp1').physics('spf').field('velocity').field('M_n');
model.component('comp1').physics('spf').field('velocity').component({'Mnn' 'Mtn' 'Msn'});
model.component('comp1').physics('spf').field('pressure').field('Qn');
model.component('comp1').physics('spf').create('bs1', 'BoundaryStress', 1);
model.component('comp1').physics('spf').feature('bs1').selection.set([1]);
model.component('comp1').physics('spf').create('bs2', 'BoundaryStress', 1);
model.component('comp1').physics('spf').feature('bs2').selection.set([16]);
model.component('comp1').physics('spf').create('pfc1', 'PeriodicFlowCondition', 1);
model.component('comp1').physics('spf').feature('pfc1').selection.set([2 3 5 7 9 11 13 15]);
model.component('comp1').physics('spf').create('vf1', 'VolumeForce', 2);
model.component('comp1').physics('spf').feature('vf1').selection.set([1 2 3 4 5 6]);
model.component('comp1').physics.create('spf2', 'CreepingFlow', 'geom1');
model.component('comp1').physics('spf2').field('velocity').field('M_t');
model.component('comp1').physics('spf2').field('velocity').component({'Mnt' 'Mtt' 'Mst'});
model.component('comp1').physics('spf2').field('pressure').field('Qt');
model.component('comp1').physics('spf2').create('bs1', 'BoundaryStress', 1);
model.component('comp1').physics('spf2').feature('bs1').selection.set([1]);
model.component('comp1').physics('spf2').create('bs2', 'BoundaryStress', 1);
model.component('comp1').physics('spf2').feature('bs2').selection.set([16]);
model.component('comp1').physics('spf2').create('pfc1', 'PeriodicFlowCondition', 1);
model.component('comp1').physics('spf2').feature('pfc1').selection.set([2 3 5 7 9 11 13 15]);
model.component('comp1').physics('spf2').create('vf1', 'VolumeForce', 2);
model.component('comp1').physics('spf2').feature('vf1').selection.set([1 2 3 4 5 6]);
model.component('comp1').physics.create('spf3', 'CreepingFlow', 'geom1');
model.component('comp1').physics('spf3').field('velocity').field('N_n');
model.component('comp1').physics('spf3').field('velocity').component({'Nnn' 'Ntn' 'Nsn'});
model.component('comp1').physics('spf3').field('pressure').field('Rn');
model.component('comp1').physics('spf3').create('bs1', 'BoundaryStress', 1);
model.component('comp1').physics('spf3').feature('bs1').selection.set([1]);
model.component('comp1').physics('spf3').create('bs2', 'BoundaryStress', 1);
model.component('comp1').physics('spf3').feature('bs2').selection.set([16]);
model.component('comp1').physics('spf3').create('pfc1', 'PeriodicFlowCondition', 1);
model.component('comp1').physics('spf3').feature('pfc1').selection.set([2 3 5 7 9 11 13 15]);
model.component('comp1').physics('spf3').create('vf1', 'VolumeForce', 2);
model.component('comp1').physics('spf3').feature('vf1').selection.set([1 2 3 4 5 6]);
model.component('comp1').physics.create('spf4', 'CreepingFlow', 'geom1');
model.component('comp1').physics('spf4').field('velocity').field('N_t');
model.component('comp1').physics('spf4').field('velocity').component({'Nnt' 'Ntt' 'Nst'});
model.component('comp1').physics('spf4').field('pressure').field('Rt');
model.component('comp1').physics('spf4').create('bs1', 'BoundaryStress', 1);
model.component('comp1').physics('spf4').feature('bs1').selection.set([1]);
model.component('comp1').physics('spf4').create('bs2', 'BoundaryStress', 1);
model.component('comp1').physics('spf4').feature('bs2').selection.set([16]);
model.component('comp1').physics('spf4').create('pfc1', 'PeriodicFlowCondition', 1);
model.component('comp1').physics('spf4').feature('pfc1').selection.set([2 3 5 7 9 11 13 15]);
model.component('comp1').physics('spf4').create('vf1', 'VolumeForce', 2);
model.component('comp1').physics('spf4').feature('vf1').selection.set([1 2 3 4 5 6]);

model.component('comp1').mesh('mesh1').create('size1', 'Size');
model.component('comp1').mesh('mesh1').create('size2', 'Size');
model.component('comp1').mesh('mesh1').create('ftri1', 'FreeTri');
model.component('comp1').mesh('mesh1').create('bl1', 'BndLayer');
model.component('comp1').mesh('mesh1').feature('size1').selection.geom('geom1', 1);
model.component('comp1').mesh('mesh1').feature('size1').selection.set([17 18 19 20 21 22 23 24]);
model.component('comp1').mesh('mesh1').feature('size2').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('size2').selection.set([2 3 4 5]);
model.component('comp1').mesh('mesh1').feature('ftri1').selection.geom('geom1');
model.component('comp1').mesh('mesh1').feature('bl1').selection.geom('geom1', 2);
model.component('comp1').mesh('mesh1').feature('bl1').selection.set([1 2 3 4 5 6]);
model.component('comp1').mesh('mesh1').feature('bl1').create('blp1', 'BndLayerProp');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp1').selection.set([17 18 19 20 21 22 23 24]);

model.result.table('tbl1').comments('U');
model.result.table('tbl2').comments('D');

model.component('comp1').view('view1').axis.set('xmin', -8.425809860229492);
model.component('comp1').view('view1').axis.set('xmax', 8.374189376831055);
model.component('comp1').view('view1').axis.set('ymin', -4.394383430480957);
model.component('comp1').view('view1').axis.set('ymax', 3.693955421447754);

model.component('comp1').physics('spf').label('Qn Mnn Mtn');
model.component('comp1').physics('spf').prop('ConsistentStabilization').set('StreamlineDiffusion', false);
model.component('comp1').physics('spf').feature('fp1').set('rho_mat', 'userdef');
model.component('comp1').physics('spf').feature('fp1').set('rho', 1);
model.component('comp1').physics('spf').feature('fp1').set('mu_mat', 'userdef');
model.component('comp1').physics('spf').feature('fp1').set('mu', 1);
model.component('comp1').physics('spf').feature('vf1').set('F', {'-(epsilon*ReL*Uratio*U*Mnnx+epsilon*ReL*V*Uratio*Mnny)+1*(x>=x_dir-delta/2)*(x<=x_dir+delta/2)*1/delta'; '-(epsilon*ReL*Uratio*U*Mtnx+epsilon*ReL*V*Uratio*Mtny)+0*(x>=x_dir-delta/2)*(x<=x_dir+delta/2)*1/delta'; '0'});
model.component('comp1').physics('spf2').label('Qt Mnt Mtt');
model.component('comp1').physics('spf2').prop('ConsistentStabilization').set('StreamlineDiffusion', false);
model.component('comp1').physics('spf2').feature('fp1').set('rho_mat', 'userdef');
model.component('comp1').physics('spf2').feature('fp1').set('rho', 1);
model.component('comp1').physics('spf2').feature('fp1').set('mu_mat', 'userdef');
model.component('comp1').physics('spf2').feature('fp1').set('mu', 1);
model.component('comp1').physics('spf2').feature('vf1').set('F', {'-(epsilon*ReL*U*Uratio*Mntx+epsilon*ReL*Uratio*V*Mnty)+0*(x>=x_dir-delta/2)*(x<=x_dir+delta/2)*1/delta'; '-(epsilon*ReL*U*Uratio*Mttx+epsilon*ReL*Uratio*V*Mtty)+1*(x>=x_dir-delta/2)*(x<=x_dir+delta/2)*1/delta'; '0'});
model.component('comp1').physics('spf3').label('Rn Nnn Ntn ');
model.component('comp1').physics('spf3').prop('ConsistentStabilization').set('StreamlineDiffusion', false);
model.component('comp1').physics('spf3').feature('fp1').set('rho_mat', 'userdef');
model.component('comp1').physics('spf3').feature('fp1').set('rho', 1);
model.component('comp1').physics('spf3').feature('fp1').set('mu_mat', 'userdef');
model.component('comp1').physics('spf3').feature('fp1').set('mu', 1);
model.component('comp1').physics('spf3').feature('vf1').set('F', {'-(epsilon*ReL*U*Uratio*Nnnx+epsilon*ReL*V*Uratio*Nnny)-1*(x>=x_dir-delta/2)*(x<=x_dir+delta/2)*1/delta'; '-(epsilon*ReL*U*Uratio*Ntnx+epsilon*ReL*V*Uratio*Ntny)-0*(x>=x_dir-delta/2)*(x<=x_dir+delta/2)*1/delta'; '0'});
model.component('comp1').physics('spf4').label('Rt Nnt Ntt');
model.component('comp1').physics('spf4').prop('ConsistentStabilization').set('StreamlineDiffusion', false);
model.component('comp1').physics('spf4').feature('fp1').set('rho_mat', 'userdef');
model.component('comp1').physics('spf4').feature('fp1').set('rho', 1);
model.component('comp1').physics('spf4').feature('fp1').set('mu_mat', 'userdef');
model.component('comp1').physics('spf4').feature('fp1').set('mu', 1);
model.component('comp1').physics('spf4').feature('vf1').set('F', {'-(epsilon*ReL*U*Uratio*Nntx+epsilon*ReL*V*Uratio*Nnty)-0*(x>=x_dir-delta/2)*(x<=x_dir+delta/2)*1/delta'; '-(epsilon*ReL*U*Uratio*Nttx+epsilon*ReL*V*Uratio*Ntty)-1*(x>=x_dir-delta/2)*(x<=x_dir+delta/2)*1/delta'; '0'});

model.component('comp1').mesh('mesh1').feature('size').set('hauto', 3);
model.component('comp1').mesh('mesh1').feature('size').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('size').set('table', 'cfd');
model.component('comp1').mesh('mesh1').feature('size').set('hmax', '10*delta');
model.component('comp1').mesh('mesh1').feature('size').set('hmin', 4.0E-4);
model.component('comp1').mesh('mesh1').feature('size').set('hgrad', 1.1);
model.component('comp1').mesh('mesh1').feature('size1').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('size1').set('table', 'cfd');
model.component('comp1').mesh('mesh1').feature('size1').set('hmax', '2*delta');
model.component('comp1').mesh('mesh1').feature('size1').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('size1').set('hmin', 0.002);
model.component('comp1').mesh('mesh1').feature('size1').set('hgrad', 1.15);
model.component('comp1').mesh('mesh1').feature('size1').set('hminactive', false);
model.component('comp1').mesh('mesh1').feature('size1').set('hcurveactive', false);
model.component('comp1').mesh('mesh1').feature('size1').set('hnarrowactive', false);
model.component('comp1').mesh('mesh1').feature('size1').set('hgradactive', false);
model.component('comp1').mesh('mesh1').feature('size2').set('custom', 'on');
model.component('comp1').mesh('mesh1').feature('size2').set('table', 'cfd');
model.component('comp1').mesh('mesh1').feature('size2').set('hmax', 'delta');
model.component('comp1').mesh('mesh1').feature('size2').set('hmaxactive', true);
model.component('comp1').mesh('mesh1').feature('size2').set('hmin', 0.002);
model.component('comp1').mesh('mesh1').feature('size2').set('hgrad', 1.15);
model.component('comp1').mesh('mesh1').feature('size2').set('hminactive', false);
model.component('comp1').mesh('mesh1').feature('size2').set('hcurveactive', false);
model.component('comp1').mesh('mesh1').feature('size2').set('hnarrowactive', false);
model.component('comp1').mesh('mesh1').feature('size2').set('hgradactive', false);
model.component('comp1').mesh('mesh1').feature('bl1').set('sharpcorners', 'trim');
model.component('comp1').mesh('mesh1').feature('bl1').feature('blp1').set('blhminfact', 10);
model.component('comp1').mesh('mesh1').run;

model.study.create('std1');
model.study('std1').create('time', 'Transient');

model.sol.create('sol1');
model.sol('sol1').study('std1');
model.sol('sol1').attach('std1');
model.sol('sol1').create('st1', 'StudyStep');
model.sol('sol1').create('v1', 'Variables');
model.sol('sol1').create('t1', 'Time');
model.sol('sol1').feature('t1').create('fc1', 'FullyCoupled');
model.sol('sol1').feature('t1').create('d1', 'Direct');
model.sol('sol1').feature('t1').create('i1', 'Iterative');
model.sol('sol1').feature('t1').create('i2', 'Iterative');
model.sol('sol1').feature('t1').create('i3', 'Iterative');
model.sol('sol1').feature('t1').create('i4', 'Iterative');
model.sol('sol1').feature('t1').feature('i1').create('bns1', 'BlockNavierStokes');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').create('bns1', 'BlockNavierStokes');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i3').create('bns1', 'BlockNavierStokes');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i4').create('bns1', 'BlockNavierStokes');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').create('mg1', 'Multigrid');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('pr').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('po').create('sl1', 'SORLine');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('cs').create('d1', 'Direct');
model.sol('sol1').feature('t1').feature.remove('fcDef');

model.result.dataset.create('dset4', 'Solution');
model.result.dataset.remove('dset1');
model.result.numerical.create('int1', 'IntLine');
model.result.numerical.create('int2', 'IntLine');
model.result.numerical('int1').selection.set([1]);
model.result.numerical('int1').set('probetag', 'none');
model.result.numerical('int2').selection.set([16]);
model.result.numerical('int2').set('probetag', 'none');

model.study('std1').feature('time').set('tlist', 'range(0,50,1000)');

model.sol('sol1').attach('std1');
model.sol('sol1').feature('st1').label('Compile Equations: Time Dependent');
model.sol('sol1').feature('v1').label('Dependent Variables 1.1');
model.sol('sol1').feature('v1').set('clist', {'range(0,50,1000)' '1.0[s]'});
model.sol('sol1').feature('t1').label('Time-Dependent Solver 1.1');
model.sol('sol1').feature('t1').set('tlist', 'range(0,50,1000)');
model.sol('sol1').feature('t1').set('rtol', 0.005);
model.sol('sol1').feature('t1').set('atolglobalfactor', 0.05);
model.sol('sol1').feature('t1').set('atolmethod', {'comp1_M_n' 'global' 'comp1_M_t' 'global' 'comp1_N_n' 'global' 'comp1_N_t' 'global' 'comp1_Qn' 'scaled'  ...
'comp1_Qt' 'scaled' 'comp1_Rn' 'scaled' 'comp1_Rt' 'scaled'});
model.sol('sol1').feature('t1').set('atolfactor', {'comp1_M_n' '0.1' 'comp1_M_t' '0.1' 'comp1_N_n' '0.1' 'comp1_N_t' '0.1' 'comp1_Qn' '1'  ...
'comp1_Qt' '1' 'comp1_Rn' '1' 'comp1_Rt' '1'});
model.sol('sol1').feature('t1').set('maxorder', 2);
model.sol('sol1').feature('t1').set('stabcntrl', true);
model.sol('sol1').feature('t1').set('bwinitstepfrac', 0.01);
model.sol('sol1').feature('t1').set('estrat', 'exclude');
model.sol('sol1').feature('t1').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('aDef').label('Advanced 1');
model.sol('sol1').feature('t1').feature('aDef').set('cachepattern', true);
model.sol('sol1').feature('t1').feature('fc1').label('Fully Coupled 1.1');
model.sol('sol1').feature('t1').feature('fc1').set('linsolver', 'd1');
model.sol('sol1').feature('t1').feature('fc1').set('maxiter', 8);
model.sol('sol1').feature('t1').feature('fc1').set('ntolfact', 0.5);
model.sol('sol1').feature('t1').feature('fc1').set('damp', '0.9');
model.sol('sol1').feature('t1').feature('fc1').set('jtech', 'once');
model.sol('sol1').feature('t1').feature('fc1').set('stabacc', 'aacc');
model.sol('sol1').feature('t1').feature('fc1').set('aaccdim', 5);
model.sol('sol1').feature('t1').feature('fc1').set('aaccmix', 0.9);
model.sol('sol1').feature('t1').feature('fc1').set('aaccdelay', 1);
model.sol('sol1').feature('t1').feature('d1').label('Direct, fluid flow variables (spf) (merged) (merged) (merged)');
model.sol('sol1').feature('t1').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i1').label('Block Navier-Stokes, fluid flow variables (spf)');
model.sol('sol1').feature('t1').feature('i1').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i1').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i1').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').label('Block Navier-Stokes 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').set('schurcomplementapproximation', 'abssumf');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').set('velocityvars', {'comp1_M_n'});
model.sol('sol1').feature('t1').feature('i1').feature('bns1').set('pressurevars', {'comp1_Qn'});
model.sol('sol1').feature('t1').feature('i1').feature('bns1').set('hybridvar', {'comp1_M_n' 'comp1_Qn'});
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').label('Velocity Solver 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').label('Pressure Solver 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i1').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i2').label('Block Navier-Stokes, fluid flow variables (spf2)');
model.sol('sol1').feature('t1').feature('i2').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i2').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i2').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').label('Block Navier-Stokes 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').set('schurcomplementapproximation', 'abssumf');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').set('velocityvars', {'comp1_M_t'});
model.sol('sol1').feature('t1').feature('i2').feature('bns1').set('pressurevars', {'comp1_Qt'});
model.sol('sol1').feature('t1').feature('i2').feature('bns1').set('hybridvar', {'comp1_M_t' 'comp1_Qt'});
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').label('Velocity Solver 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').label('Pressure Solver 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i2').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i3').label('Block Navier-Stokes, fluid flow variables (spf3)');
model.sol('sol1').feature('t1').feature('i3').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i3').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i3').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').label('Block Navier-Stokes 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').set('schurcomplementapproximation', 'abssumf');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').set('velocityvars', {'comp1_N_n'});
model.sol('sol1').feature('t1').feature('i3').feature('bns1').set('pressurevars', {'comp1_Rn'});
model.sol('sol1').feature('t1').feature('i3').feature('bns1').set('hybridvar', {'comp1_N_n' 'comp1_Rn'});
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').label('Velocity Solver 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').label('Pressure Solver 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i3').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i4').label('Block Navier-Stokes, fluid flow variables (spf4)');
model.sol('sol1').feature('t1').feature('i4').set('maxlinit', 100);
model.sol('sol1').feature('t1').feature('i4').set('rhob', 20);
model.sol('sol1').feature('t1').feature('i4').feature('ilDef').label('Incomplete LU 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').label('Block Navier-Stokes 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').set('schurcomplementapproximation', 'abssumf');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').set('velocityvars', {'comp1_N_t'});
model.sol('sol1').feature('t1').feature('i4').feature('bns1').set('pressurevars', {'comp1_Rt'});
model.sol('sol1').feature('t1').feature('i4').feature('bns1').set('hybridvar', {'comp1_N_t' 'comp1_Rt'});
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').label('Velocity Solver 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').set('saamgcompwise', true);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('vs').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').label('Pressure Solver 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('dDef').label('Direct 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').label('Multigrid 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').set('prefun', 'saamg');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').set('maxcoarsedof', 50000);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').set('strconn', 0.02);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').set('usesmooth', false);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('pr').label('Presmoother 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('pr').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('po').label('Postsmoother 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('po').feature('soDef').label('SOR 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').label('SOR Line 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').set('iter', 1);
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('po').feature('sl1').set('linemethod', 'uncoupled');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('cs').label('Coarse Solver 1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('dDef').label('Direct 2');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').label('Direct 1.1');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').set('linsolver', 'pardiso');
model.sol('sol1').feature('t1').feature('i4').feature('bns1').feature('ps').feature('mg1').feature('cs').feature('d1').set('pivotperturb', 1.0E-13);
model.sol('sol1').runAll;

model.result.numerical('int1').label('U');
model.result.numerical('int1').set('looplevelinput', {'last'});
model.result.numerical('int1').set('table', 'tbl1');
model.result.numerical('int1').set('expr', {'Mnn' 'Mnt' 'Mtn' 'Mtt'});
model.result.numerical('int1').set('unit', {'' '' '' ''});
model.result.numerical('int1').set('descr', {'Mnn' 'Mnt' 'Mtn' 'Mtt'});
model.result.numerical('int2').label('D');
model.result.numerical('int2').set('looplevelinput', {'last'});
model.result.numerical('int2').set('table', 'tbl2');
model.result.numerical('int2').set('expr', {'Nnn' 'Nnt' 'Ntn' 'Ntt'});
model.result.numerical('int2').set('unit', {'' '' '' ''});
model.result.numerical('int2').set('descr', {'Nnn' 'Nnt' 'Ntn' 'Ntt'});
model.result.numerical('int1').setResult;
model.result.numerical('int2').setResult;

model.result.table('tbl1').save([path,'\M_ca-cell',num2str(i),'-it',num2str(iter),'.txt']);
model.result.table('tbl2').save([path,'\N_ca-cell',num2str(i),'-it',num2str(iter),'.txt']);

out = model;
end

%put together all micro results
if length(param_list(1,:))==1
    M=load([path,'\M_ca-cell',num2str(1),'-it',num2str(iter),'.txt']);
    N=load([path,'\N_ca-cell',num2str(1),'-it',num2str(iter),'.txt']);
    MN=[M(2:end),N(2:end)].*ones([1/epsilon,8]);
    writematrix(MN,[path,'\MN_ca-it',num2str(iter),'.txt']);
elseif length(param_list(1,:))==1/epsilon
    MN=[];
    for i=1:1/epsilon
        M(i,:)=load([path,'\M_ca-cell',num2str(i),'-it',num2str(iter),'.txt']);
        N(i,:)=load([path,'\N_ca-cell',num2str(i),'-it',num2str(iter),'.txt']);
        MN=[MN;[M(i,2:end),N(i,2:end)]];
    end
    writematrix(MN,[path,'\MN_ca-it',num2str(iter),'.txt']);
else 
    disp('ERROR: parameter list is not of length 1 (Stokes) or 1/epsilon (CA/VA). No MN is written')
end